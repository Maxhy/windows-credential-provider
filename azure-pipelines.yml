pool:
  vmImage: 'windows-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  build.version.major: 1
  build.version.minor: 0
  build.version.revision: 0
  build.version.beta: $[counter(format('{0}.{1}.{2}', variables['build.version.major'], variables['build.version.minor'], variables['build.version.revision']), 0)]
  build.version.suffix: -beta1.$(build.version.beta)
  build.version: $(build.version.major).$(build.version.minor).$(build.version.revision)$(build.version.suffix)
  build.date: $[format('{0:yyyy}-{0:MM}-{0:dd}T{0:HH}:{0:mm}:{0:ss}', pipeline.startTime)]

name: $(version)

steps:
- task: NuGetToolInstaller@1

- task: DotNetCoreCLI@2
  displayName: dotnet build
  inputs:
    command: build
    publishWebProjects: false
    arguments: '-c $(buildConfiguration) -p:Version=$(build.version) -p:PackageOutputPath=$(Build.ArtifactStagingDirectory)'
    projects: 'src/Lithnet.CredentialProvider/Lithnet.CredentialProvider.csproj'
    zipAfterPublish: false

- task: DotNetCoreCLI@2
  displayName: dotnet push
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '91a552bc-359d-4f28-bdbd-f36f71cfdf81'
